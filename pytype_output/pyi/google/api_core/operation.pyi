# (generated with --quick)

import google.api_core.future.polling
from typing import Any

code_pb2: module
exceptions: module
functools: module
json_format: module
operations_pb2: module
polling: module
protobuf_helpers: module
threading: module

class Operation(google.api_core.future.polling.PollingFuture):
    __doc__: str
    _cancel: Any
    _completion_lock: threading.Lock
    _metadata_type: Any
    _operation: Any
    _refresh: Any
    _result_type: Any
    metadata: Any
    operation: Any
    def __init__(self, operation, refresh, cancel, result_type, metadata_type = ..., retry = ...) -> None: ...
    def _refresh_and_update(self, retry = ...) -> None: ...
    def _set_result_from_operation(self) -> None: ...
    def cancel(self) -> bool: ...
    def cancelled(self) -> Any: ...
    @classmethod
    def deserialize(self, payload) -> Any: ...
    def done(self, retry = ...) -> Any: ...

def _cancel_grpc(operations_stub, operation_name) -> None: ...
def _cancel_http(api_request, operation_name) -> None: ...
def _refresh_grpc(operations_stub, operation_name) -> Any: ...
def _refresh_http(api_request, operation_name) -> Any: ...
def from_gapic(operation, operations_client, result_type, **kwargs) -> Operation: ...
def from_grpc(operation, operations_stub, result_type, **kwargs) -> Operation: ...
def from_http_json(operation, api_request, result_type, **kwargs) -> Operation: ...
