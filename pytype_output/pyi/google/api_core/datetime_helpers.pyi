# (generated with --quick)

import google.protobuf.timestamp_pb2
from typing import Any, Pattern, Type, TypeVar

_RFC3339_MICROS: str
_RFC3339_NANOS: Pattern[str]
_RFC3339_NO_FRACTION: str
_UTC_EPOCH: datetime.datetime
calendar: module
datetime: module
pytz: module
re: module
timestamp_pb2: module

_TDatetimeWithNanoseconds = TypeVar('_TDatetimeWithNanoseconds', bound=DatetimeWithNanoseconds)

class DatetimeWithNanoseconds(datetime.datetime):
    __slots__ = ["_nanosecond"]
    __doc__: str
    _nanosecond: Any
    nanosecond: Any
    def __new__(cls: Type[_TDatetimeWithNanoseconds], *args, **kw) -> _TDatetimeWithNanoseconds: ...
    @classmethod
    def from_rfc3339(cls, stamp) -> Any: ...
    @classmethod
    def from_timestamp_pb(cls, stamp) -> Any: ...
    def rfc3339(self) -> str: ...
    def timestamp_pb(self) -> google.protobuf.timestamp_pb2.Timestamp: ...

def from_iso8601_date(value) -> datetime.date: ...
def from_iso8601_time(value) -> datetime.time: ...
def from_microseconds(value) -> datetime.datetime: ...
def from_rfc3339(value) -> datetime.datetime: ...
def from_rfc3339_nanos(value) -> datetime.datetime: ...
def to_microseconds(value) -> Any: ...
def to_milliseconds(value) -> Any: ...
def to_rfc3339(value, ignore_zone = ...) -> Any: ...
def utcnow() -> datetime.datetime: ...
